{"version":3,"file":"component---src-pages-using-typescript-tsx-9acf06b100198d83f2f6.js","mappings":"2NAaA,MAgCaA,EAA0BA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAA,IAAC,KACvDC,EAAI,SACJC,GACDF,EAAA,OACCH,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAA,UAAI,mBACcA,EAAAA,cAAA,SAAG,0BAErBA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,YAAM,YAAe,0CAClCA,EAAAA,cAAA,YAAM,YAAe,qCACzCA,EAAAA,cAAA,YAAM,oBAAuB,MAEvCA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,YAAM,cAAiB,oBACxDA,EAAAA,cAAA,YAAM,cAAiB,gBAAaA,EAAAA,cAAA,YAAM,YAAe,UAEnEA,EAAAA,cAAA,SAAG,gCAC4BA,EAAAA,cAAA,YAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+ECTX,MA9BeT,IAAA,IAAC,UAAEU,EAAS,MAAEC,EAAK,YAAEC,GAAaZ,EAAA,OAC/CH,EAAAA,cAAA,UACEgB,MAAO,CACLC,OAAQ,SACRC,QAAS,oCACTC,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBC,UAAW,8BAGbtB,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAG,IACHI,MAAO,CACLO,SAAU,iBACVC,eAAgB,SAGjBX,GAEHb,EAAAA,cAAA,OAAKyB,QAASV,EAAaC,MAAO,CAAEU,OAAQ,YAC/B,SAAVZ,EACCd,EAAAA,cAAA,OAAK2B,OAAO,eAAeC,KAAK,eAAe,eAAa,IAAIC,QAAQ,cAAcC,OAAO,MAAMC,MAAM,MAAMC,MAAM,8BAA6BhC,EAAAA,cAAA,QAAMiC,EAAE,ilBAE1JjC,EAAAA,cAAA,OAAK2B,OAAO,eAAeC,KAAK,eAAe,eAAa,IAAIC,QAAQ,cAAcC,OAAO,MAAMC,MAAM,MAAMC,MAAM,8BAA6BhC,EAAAA,cAAA,QAAMiC,EAAE,sTAGvJ,EC6CX,MArEe9B,IAAmB,IAAD+B,EAAA,IAAjB,SAAEC,GAAUhC,EAE1B,MAAOW,EAAOsB,GAAYpC,EAAAA,SAAe,SAGzCA,EAAAA,WAAgB,KACd,GAAsB,oBAAXqC,OAAwB,CAEjC,MAAMC,EAAmBC,aAAaC,QAAQ,eAExCC,EAAiBJ,OAAOK,WAAW,gCAAgCC,QAAU,OAAS,QAEtFC,EAAeN,GAAoBG,EAGzCL,EAASQ,GACTC,SAASC,gBAAgBC,aAAa,cAAeH,GACrDL,aAAaS,QAAQ,cAAeJ,EACtC,IACC,IAGH,MAAM7B,EAAcf,EAAAA,aAAkB,KACpCoC,GAASa,IACP,MAAMC,EAAyB,UAAdD,EAAwB,OAAS,QAKlD,MAJsB,oBAAXZ,SACTQ,SAASC,gBAAgBC,aAAa,cAAeG,GACrDX,aAAaS,QAAQ,cAAeE,IAE/BA,CAAQ,GACf,GACD,IAEG9C,GAAO+C,EAAAA,EAAAA,gBAAe,cAU5B,OACEnD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACoD,EAAM,CAACvC,WAAiC,QAAtBqB,EAAA9B,EAAKI,KAAK6C,oBAAY,IAAAnB,OAAA,EAAtBA,EAAwBhC,QAAS,QAASY,MAAOA,EAAOC,YAAaA,IACxFf,EAAAA,cAAA,OACEgB,MAAO,CACLC,OAAQ,SACRqC,SAAU,sBACVpC,QAAS,uBAGXlB,EAAAA,cAAA,YAAOmC,GACPnC,EAAAA,cAAA,UACEgB,MAAO,CACLuC,UAAW,iBACXhC,SAAU,mBAEb,MACI,IAAIiC,MAAOC,cAAc,gBAC3B,IACDzD,EAAAA,cAAA,KAAGU,KAAK,4BAA2B,YAGtC,C,+CC3BP,IAlCA,SAAYP,GAAoC,IAADuD,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAE1D,EAAK,SAAEiC,GAAUhC,EAC3C,MAAM,KAAEK,IAAS2C,EAAAA,EAAAA,gBAAe,YAc1BU,EAAkBD,GAAepD,EAAK6C,aAAaO,YACnDE,EAAgC,QAApBJ,EAAGlD,EAAK6C,oBAAY,IAAAK,OAAA,EAAjBA,EAAmBxD,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ8D,EAAe,GAAG5D,OAAW4D,IAAiB5D,GACtDF,EAAAA,cAAA,QAAM+D,KAAK,cAAcC,QAASH,IAClC7D,EAAAA,cAAA,QAAMiE,SAAS,WAAWD,QAAS9D,IACnCF,EAAAA,cAAA,QAAMiE,SAAS,iBAAiBD,QAASH,IACzC7D,EAAAA,cAAA,QAAMiE,SAAS,UAAUD,QAAQ,YACjChE,EAAAA,cAAA,QAAM+D,KAAK,eAAeC,QAAQ,YAClChE,EAAAA,cAAA,QAAM+D,KAAK,kBAAkBC,SAA0B,QAAjBL,EAAAnD,EAAK6C,oBAAY,IAAAM,OAAA,EAAjBA,EAAmBO,SAAU,KACnElE,EAAAA,cAAA,QAAM+D,KAAK,gBAAgBC,QAAS9D,IACpCF,EAAAA,cAAA,QAAM+D,KAAK,sBAAsBC,QAASH,IACzC1B,EAGP,C","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  location,\r\n}) => (\r\n  <Layout>\r\n    <h1>\r\n      Gatsby supports <b>TypeScript by default</b>\r\n    </h1>\r\n    <p>\r\n      This means that you can create and write <code>.ts/.tsx</code> files for\r\n      your pages, components, and <code>gatsby-*</code> configuration files (for\r\n      example <code>gatsby-config.ts</code>).\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <code>typescript</code> via npm\r\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page <code>{location.pathname}</code> which was\r\n      built on {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Header = ({ siteTitle, theme, toggleTheme }) => (\r\n  <header\r\n    style={{\r\n      margin: `0 auto`,\r\n      padding: `var(--space-3) var(--size-gutter)`,\r\n      display: `flex`,\r\n      alignItems: `center`,\r\n      justifyContent: `space-between`,\r\n      boxShadow: `1px 0.1px 5px 3px #303030`,\r\n    }}\r\n  >\r\n    <Link\r\n      to=\"/\"\r\n      style={{\r\n        fontSize: `var(--font-sm)`,\r\n        textDecoration: `none`,\r\n      }}\r\n    >\r\n      {siteTitle}\r\n    </Link>\r\n    <div onClick={toggleTheme} style={{ cursor: 'pointer'}}>\r\n      {theme === 'dark' ? (\r\n        <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"></path></svg>\r\n      ) : (\r\n        <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"></path></svg>\r\n      )}\r\n    </div>\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  // 초기 상태를 'light'로 설정\r\n  const [theme, setTheme] = React.useState('light');\r\n\r\n  // 클라이언트에서만 실행되는 로직\r\n  React.useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      // 로컬 스토리지에서 사용자 테마 가져오기\r\n      const isUserColorTheme = localStorage.getItem('color-theme');\r\n      // OS 기본 테마 확인\r\n      const isOsColorTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n      // 최종 테마 결정\r\n      const initialTheme = isUserColorTheme || isOsColorTheme;\r\n\r\n      // 상태와 DOM에 테마 적용\r\n      setTheme(initialTheme);\r\n      document.documentElement.setAttribute('color-theme', initialTheme);\r\n      localStorage.setItem('color-theme', initialTheme);\r\n    }\r\n  }, []);\r\n\r\n  // 테마 전환 함수\r\n  const toggleTheme = React.useCallback(() => {\r\n    setTheme(prevTheme => {\r\n      const newTheme = prevTheme === 'light' ? 'dark' : 'light';\r\n      if (typeof window !== 'undefined') {\r\n        document.documentElement.setAttribute('color-theme', newTheme);\r\n        localStorage.setItem('color-theme', newTheme);\r\n      }\r\n      return newTheme;\r\n    });\r\n  }, []);\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} theme={theme} toggleTheme={toggleTheme} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: `var(--size-content)`,\r\n          padding: `var(--size-gutter)`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            marginTop: `var(--space-5)`,\r\n            fontSize: `var(--font-sm)`,\r\n          }}\r\n        >\r\n          © {new Date().getFullYear()} &middot; Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","siteTitle","theme","toggleTheme","style","margin","padding","display","alignItems","justifyContent","boxShadow","fontSize","textDecoration","onClick","cursor","stroke","fill","viewBox","height","width","xmlns","d","_data$site$siteMetada","children","setTheme","window","isUserColorTheme","localStorage","getItem","isOsColorTheme","matchMedia","matches","initialTheme","document","documentElement","setAttribute","setItem","prevTheme","newTheme","useStaticQuery","Header","siteMetadata","maxWidth","marginTop","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}