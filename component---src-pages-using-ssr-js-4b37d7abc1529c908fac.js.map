{"version":3,"file":"component---src-pages-using-ssr-js-4b37d7abc1529c908fac.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Header = ({ siteTitle, theme, toggleTheme }) => (\r\n  <header\r\n    style={{\r\n      margin: `0 auto`,\r\n      padding: `var(--space-3) var(--size-gutter)`,\r\n      display: `flex`,\r\n      alignItems: `center`,\r\n      justifyContent: `space-between`,\r\n      boxShadow: `1px 0.1px 5px 3px #303030`,\r\n    }}\r\n  >\r\n    <Link\r\n      to=\"/\"\r\n      style={{\r\n        fontSize: `var(--font-lg)`,\r\n        textDecoration: `none`\r\n      }}\r\n    >\r\n      {siteTitle}\r\n    </Link>\r\n    <div onClick={toggleTheme} style={{ cursor: 'pointer'}}>\r\n      {theme === 'dark' ? (\r\n        <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"></path></svg>\r\n      ) : (\r\n        <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"></path></svg>\r\n      )}\r\n    </div>\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","import React, {useState,useEffect,useCallback} from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"@fontsource/noto-sans-kr\"\r\nimport \"@fontsource/noto-sans-kr/700.css\";\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  // 초기 상태를 'light'로 설정\r\n  const [theme, setTheme] = useState('light');\r\n\r\n  // 클라이언트에서만 실행되는 로직\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      // 로컬 스토리지에서 사용자 테마 가져오기\r\n      const localStorageTheme = localStorage.getItem('color-theme');\r\n      // OS 기본 테마 확인\r\n      const osTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n      // 최종 테마 결정\r\n      const currentTheme = localStorageTheme || osTheme;\r\n\r\n      // 상태와 DOM에 테마 적용\r\n      setTheme(currentTheme);\r\n      document.documentElement.setAttribute('color-theme', currentTheme);\r\n      localStorage.setItem('color-theme', currentTheme);\r\n    }\r\n  }, []);\r\n\r\n  // 테마 전환 함수\r\n  const toggleTheme = useCallback(() => {\r\n    setTheme(prevTheme => {\r\n      const newTheme = prevTheme === 'light' ? 'dark' : 'light';\r\n      if (typeof window !== 'undefined') {\r\n        document.documentElement.setAttribute('color-theme', newTheme);\r\n        localStorage.setItem('color-theme', newTheme);\r\n      }\r\n      return newTheme;\r\n    });\r\n  }, []);\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} theme={theme} toggleTheme={toggleTheme} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: `var(--size-content)`,\r\n          padding: `var(--size-gutter)`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            marginTop: `var(--space-5)`,\r\n            fontSize: `var(--font-sm)`,\r\n          }}\r\n        >\r\n          © hyeonZIP &middot; Refered to\r\n          {` `}\r\n          <a href=\"https://hudi.blog/\" style={{fontSize: '14px', textDecoration: 'underline'}}>@hudi</a>\r\n          {` `}\r\n          Theme\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst UsingSSR = ({ serverData }) => {\r\n  return (\r\n    <Layout>\r\n      <h1>\r\n        This page is <b>rendered server-side</b>\r\n      </h1>\r\n      <p>\r\n        This page is rendered server side every time the page is requested.\r\n        Reload it to see a(nother) random photo from{\" \"}\r\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\r\n      </p>\r\n      <img\r\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\r\n        alt=\"A random dog\"\r\n        src={serverData.message}\r\n      />\r\n      <p>\r\n        To learn more, head over to our{\" \"}\r\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\r\n          documentation about Server Side Rendering\r\n        </a>\r\n        .\r\n      </p>\r\n      <Link to=\"/\">Go back to the homepage</Link>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"Using SSR\" />\r\n\r\nexport default UsingSSR\r\n\r\nexport async function getServerData() {\r\n  try {\r\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\r\n    if (!res.ok) {\r\n      throw new Error(`Response failed`)\r\n    }\r\n    return {\r\n      props: await res.json(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      status: 500,\r\n      headers: {},\r\n      props: {},\r\n    }\r\n  }\r\n}\r\n"],"names":["_ref","siteTitle","theme","toggleTheme","React","style","margin","padding","display","alignItems","justifyContent","boxShadow","Link","to","fontSize","textDecoration","onClick","cursor","stroke","fill","viewBox","height","width","xmlns","d","_data$site$siteMetada","children","setTheme","useState","useEffect","window","localStorageTheme","localStorage","getItem","osTheme","matchMedia","matches","currentTheme","document","documentElement","setAttribute","setItem","useCallback","prevTheme","newTheme","data","useStaticQuery","Header","site","siteMetadata","title","maxWidth","marginTop","href","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","Head","Seo","serverData","Layout","borderRadius","alt","src","message"],"sourceRoot":""}