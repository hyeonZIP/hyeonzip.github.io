{"version":3,"file":"component---src-pages-index-js-198cc1ba6cd8a6561d71.js","mappings":"6JA0BA,IAvBiBA,IAAqC,IAApC,MAAEC,EAAK,IAAEC,EAAG,OAAEC,EAAM,OAAEC,GAAQJ,EAC9C,OACEK,EAAAA,cAAA,WAEGJ,EAAMK,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,OACEF,EAAAA,cAAA,OAAKI,IAAKD,EAAKE,IACbL,EAAAA,cAACM,EAAAA,KAAI,CAACC,UAAU,UAAUC,GAAIL,EAAKM,OAAOC,MAAOP,EAAKQ,YAAYC,OAClEZ,EAAAA,cAAA,OAAKO,UAAU,UAAUJ,EAAKQ,YAAYE,MAC1Cb,EAAAA,cAAA,KAAGO,UAAU,aAAaJ,EAAKW,SACL,MAAxBX,EAAKQ,YAAYd,IAAeM,EAAKQ,YAAYd,IAAIkB,MAAM,KAAKd,KAAKJ,GACrEG,EAAAA,cAAA,QAAMO,UAAU,MAAMH,IAAKP,GACzBG,EAAAA,cAACM,EAAAA,KAAI,CAACE,GAAI,aAAaQ,mBAAmBnB,MAASA,MAElD,GACLG,EAAAA,cAAA,WACI,IAGN,C,oFChBV,UAAeL,IAAe,IAAd,KAAEsB,GAAMtB,EAEtB,MAAMuB,GAAaC,EAAAA,EAAAA,GAASF,EAAKG,QAAQC,MAAM,GAAGC,gBAAgBC,kBAC5D,EAACC,EAAc,EAACC,IAAoBC,EAAAA,EAAAA,UAAST,EAAKU,kBAAkBC,QACpE,EAACC,EAAY,EAACC,IAAkBJ,EAAAA,EAAAA,UAAS,MAkB/C,OACE1B,EAAAA,cAAC+B,EAAAA,EAAM,KACL/B,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKgC,MAAM,UACThC,EAAAA,cAAA,WAAKA,EAAAA,cAACiC,EAAAA,EAAW,CAACC,MAAOhB,EAAYiB,IAAI,kBACzCnC,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKgC,MAAM,UAAS,aACpBhC,EAAAA,cAAA,OAAKgC,MAAM,WAAU,YACrBhC,EAAAA,cAAA,WAAK,eAITA,EAAAA,cAAA,UAAKwB,EAAcY,OAAO,UAE1BpC,EAAAA,cAACqC,EAAAA,EAAQ,CAACzC,MAAO4B,KAIxB,C","sources":["webpack://gatsby-starter-default/./src/components/postList.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst PostList = ({ posts, tag, series, search }) => {\r\n  return (\r\n    <div>\r\n      {/* 존재하는 모든 포스트 반복 생성 */}\r\n      {posts.map(({ node }) => {\r\n        return (\r\n          <div key={node.id}>\r\n            <Link className=\"i-title\" to={node.fields.slug}>{node.frontmatter.title}</Link>\r\n            <div className=\"i-date\">{node.frontmatter.date}</div>\r\n            <p className=\"i-excerpt\">{node.excerpt}</p>\r\n            {(node.frontmatter.tag != null) ? node.frontmatter.tag.split(\",\").map((tag) => (\r\n              <span className=\"tag\" key={tag}>\r\n                <Link to={`/tags?tag=${encodeURIComponent(tag)}`}>{tag}</Link>\r\n              </span>\r\n            )) : \"\"}\r\n            <hr />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React, {useState} from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\"\r\nimport PostList from \"../components/postList\"\r\n\r\nexport default ({ data }) => {\r\n\r\n  const profileImg = getImage(data.allFile.nodes[0].childImageSharp.gatsbyImageData)\r\n  const [filteredPosts, setFilteredPosts] = useState(data.allMarkdownRemark.edges)\r\n  const [selectedTag, setSelectedTag] = useState(null)\r\n\r\n  const handleTagClick = (tag) => {\r\n    if(!tag) return;\r\n    if(selectedTag === tag){\r\n      setSelectedTag(null)\r\n      setFilteredPosts(data.allMarkdownRemark.edges)\r\n    } else{\r\n      const filtered = data.allMarkdownRemark.edges.filter(({node})=>{\r\n        if(!node.frontmatter.tag) return false;\r\n        const tags = node.frontmatter.tag.split(\",\").map(t => t.trim());\r\n        return tags.includes(tag); \r\n      })\r\n      setSelectedTag(tag)\r\n      setFilteredPosts(filtered)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <div class=\"p-area\">\r\n          <div><GatsbyImage image={profileImg} alt=\"profileImage\"/></div>\r\n          <div>\r\n            <div class=\"p-name\">@hyeonZIP</div>\r\n            <div class=\"p-intro\">개발 깎는 노인</div>\r\n            <div> [아이콘 구역]</div>\r\n          </div>\r\n        </div>\r\n        {/* 포스트 수 */}\r\n        <h4>{filteredPosts.length} Posts</h4>\r\n        {/* 존재하는 모든 포스트 반복 생성 */}\r\n        <PostList posts={filteredPosts}/>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allFile(filter: {name: {eq: \"avatar\"}}){\r\n      nodes{\r\n        childImageSharp{\r\n          gatsbyImageData(width: 150, height: 150)\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            tag\r\n            series\r\n          }\r\n          fields{\r\n            slug\r\n          }\r\n          excerpt(truncate: true, pruneLength: 223)          \r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["_ref","posts","tag","series","search","React","map","_ref2","node","key","id","Link","className","to","fields","slug","frontmatter","title","date","excerpt","split","encodeURIComponent","data","profileImg","getImage","allFile","nodes","childImageSharp","gatsbyImageData","filteredPosts","setFilteredPosts","useState","allMarkdownRemark","edges","selectedTag","setSelectedTag","Layout","class","GatsbyImage","image","alt","length","PostList"],"sourceRoot":""}